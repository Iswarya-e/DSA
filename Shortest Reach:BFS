//Link TO HR: https://www.hackerrank.com/challenges/bfsshortreach/problem?isFullScreen=true


vector<int> bfs(int n, int m, vector<vector<int>> edges, int s) {
    vector<int> adj[n];
    for(int i=0;i<m;i++)
    {
        adj[edges[i][0]].push_back(edges[i][1]);
        adj[edges[i][1]].push_back(edges[i][0]);

    }
    map<int,int> ans;
    vector<int> visited(n+1,0);
    queue<pair<int,int>> q;
    q.push({s,0});
    visited[s]=1;
    while(!q.empty())
    {
        int node=q.front().first;
        int weight=q.front().second;
        ans[node]=weight;
        q.pop();
        for(auto it:adj[node])
        {
            if(visited[it]!=1)
            {
                visited[it]=1;
                q.push({it,weight+6});
            }
        }
        
    }
    vector<int> finallist;
    for(int i=1;i<=n;i++)
    {
        if(i!=s && visited[i]==1)
        {
            finallist.push_back(ans[i]);
        }
        else if(i!=s && visited[i]!=1)
        {
            finallist.push_back(-1);
        }
    }
    return finallist;

}
